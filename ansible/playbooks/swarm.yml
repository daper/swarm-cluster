- name: create drop-in configuration for tls
  hosts: all
  gather_facts: false
  become: true
  tasks:
    - name: create directory for docker configs
      file:
        path: /etc/systemd/system/docker.service.d
        state: directory
    
    - name: create 10-tls-verify.conf
      copy:
        dest: /etc/systemd/system/docker.service.d/10-tls-verify.conf
        content: |
          [Service]
          Environment="DOCKER_OPTS=--tlsverify --tlscacert=/etc/ssl/ca.pem --tlscert=/etc/ssl/{{ inventory_hostname }}.pem --tlskey=/etc/ssl/{{ inventory_hostname }}-key.pem"
      register: docker_tls_conf
    
    - name: restart docker service
      systemd:
        daemon_reload: yes
        name: docker
        state: restarted
      when: docker_tls_conf.changed

    - name: Get docker info
      shell: docker info
      register: docker_info
      changed_when: false
      when: docker_info is not defined

- name: "the first of its name"
  hosts: swarm-advertiser
  gather_facts: False
  tasks:
    - name: "create primary swarm manager"
      shell: docker swarm init --advertise-addr {{ private_ip }}
      when: "docker_info.stdout.find('Swarm: inactive') != -1"

    - name: "get docker swarm manager token"
      shell: "docker swarm join-token -q manager"
      register: manager_token

    - name: "get docker swarm worker token"
      shell: "docker swarm join-token -q worker"
      register: worker_token

    - set_fact:
        advertise_addr: "{{ private_ip }}"
        manager_token: "{{ manager_token.stdout }}"
        worker_token: "{{ worker_token.stdout }}"

- name: Boot up the rest of swarm managers
  hosts: swarm-managers:!swarm-advertiser
  gather_facts: False
  tasks:
    - name: "join as a manager"
      shell: docker swarm join --token {{ hostvars[groups["swarm-advertiser"][0]].manager_token }} {{ hostvars[groups["swarm-advertiser"][0]].advertise_addr }}:2377
      when: "docker_info.stdout.find('Swarm: inactive') != -1"
      retries: 3
      delay: 20

- name: Boot up swarm workers
  hosts: swarm-workers
  gather_facts: False
  tasks:
    - name: "join as a worker"
      shell: docker swarm join --token {{ hostvars[groups["swarm-advertiser"][0]].worker_token }} {{ hostvars[groups["swarm-advertiser"][0]].advertise_addr }}:2377
      when: "docker_info.stdout.find('Swarm: inactive') != -1"
      retries: 3
      delay: 20

- name: Publish API tls
  hosts: swarm-managers
  gather_facts: false
  become: true
  tasks:
    - name: create docker-tls-tcp
      copy:
        dest: /etc/systemd/system/docker-tls-tcp.socket
        content: |
          [Unit]
          Description=Docker Secured Socket for the API

          [Socket]
          ListenStream=2376
          BindIPv6Only=both
          Service=docker.service

          [Install]
          WantedBy=sockets.target
      register: docker_tls_tcp
    
    - name: Enable docker-tls-tcp.socket
      systemd:
        daemon_reload: yes
        name: docker-tls-tcp.socket
        enabled: yes
      when: docker_tls_tcp.changed
    
    - name: Stops docker service
      systemd:
        name: docker
        state: stopped
      when: docker_tls_tcp.changed
    
    - name: Starts docker socket
      systemd:
        name: docker-tls-tcp.socket
        state: started
      when: docker_tls_tcp.changed
    
    - name: Start docker service
      systemd:
        name: docker
        state: started
      when: docker_tls_tcp.changed